{"version":3,"file":"static/js/534.ba6001d5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Private/Popular/popular.module.css?1856","redux/countries/country-selectors.js","components/Private/Popular/Popular.jsx","pages/CountriesPage/CountriesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"popular\":\"popular_popular__cvlsW\",\"mainTitle\":\"popular_mainTitle__RVvT3\",\"coutriesContainer\":\"popular_coutriesContainer__GU+ze\",\"coutriesList\":\"popular_coutriesList__pSkoB\",\"countryItem\":\"popular_countryItem__jTbz-\",\"countryImage\":\"popular_countryImage__yunYq\",\"bottomInfo\":\"popular_bottomInfo__gtyht\",\"countryLocation\":\"popular_countryLocation__oyFR3\",\"countryLocationIcon\":\"popular_countryLocationIcon__ksxsb\",\"countryName\":\"popular_countryName__8wl4A\",\"wrapLike\":\"popular_wrapLike__IGPtt\",\"likeInput\":\"popular_likeInput__Bpa6+\",\"likeIcon\":\"popular_likeIcon__vpdZb\",\"liked\":\"popular_liked__3kace\"};","export const selectAllCountries = store => store.countries;\n","import styles from './popular.module.css';\n\nimport { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectAllCountries } from '../../../redux/countries/country-selectors';\n\nimport {\n  addFavorite,\n  deleteFavorite,\n} from '../../../redux/favorites/favorites-operations';\n\nimport { fetchCountries } from '../../../redux/countries/country-operations';\n\nimport icon from '../../../img/icons.svg';\n\nconst Popular = () => {\n  const { items, isLoading, error } = useSelector(selectAllCountries);\n  const { favoriteItems } = useSelector(store => store.favoriteCountries);\n\n  const [likedItems, setLikedItems] = useState({});\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCountries());\n  }, [dispatch]);\n\n  // Load liked items from localStorage on component mount\n  useEffect(() => {\n    const storedLikedItems =\n      JSON.parse(localStorage.getItem('likedItems')) || {};\n    setLikedItems(storedLikedItems);\n\n    // Dispatch actions to update global state with the stored liked items\n\n    for (const id in storedLikedItems) {\n      console.log(id, favoriteItems);\n      if (!favoriteItems.includes(id)) {\n        // Перевірка чи елемент є в глобальному стані\n        if (storedLikedItems[id]) {\n          dispatch(addFavorite(id));\n        } else {\n          dispatch(deleteFavorite(id));\n        }\n      }\n    }\n  }, [dispatch, favoriteItems]);\n\n  // Update localStorage whenever likedItems changes\n  useEffect(() => {\n    localStorage.setItem('likedItems', JSON.stringify(likedItems));\n  }, [likedItems]);\n\n  // Sync favoriteItems with likedItems when favoriteItems changes\n  useEffect(() => {\n    setLikedItems(prevLikedItems => {\n      const updatedLikedItems = { ...prevLikedItems }; // Копіюємо попередній стан\n      favoriteItems.forEach(id => {\n        // Додаємо тільки, якщо елемент ще не існує у стані likedItems\n        if (!updatedLikedItems[id]) {\n          updatedLikedItems[id] = true;\n        }\n      });\n      return updatedLikedItems; // Повертаємо оновлений стан\n    });\n  }, [favoriteItems]);\n\n  if (isLoading) {\n    return (\n      <section className={styles.popular}>\n        <div className=\"container\">\n          <h2 className={styles.mainTitle}>Find Popular Destination</h2>\n          <div className={styles.coutriesContainer}>\n            <p>...Loading</p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n  if (error) {\n    return (\n      <section className={styles.popular}>\n        <div className=\"container\">\n          <h2 className={styles.mainTitle}>Find Popular Destination</h2>\n          <div className={styles.coutriesContainer}>\n            <p>{error}</p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  if (!items || !items.countries) {\n    return null; // Add this to prevent errors if items is undefined or has no countries\n  }\n\n  const changeLike = ({ target }) => {\n    const { id, checked } = target;\n    setLikedItems(prevLikedItems => {\n      const updatedLikedItems = { ...prevLikedItems, [id]: checked };\n\n      if (!checked) {\n        delete updatedLikedItems[id]; // Remove the item from the likedItems state\n      }\n\n      // Update localStorage after state update\n      localStorage.setItem('likedItems', JSON.stringify(updatedLikedItems));\n\n      return updatedLikedItems;\n    });\n\n    if (checked) {\n      dispatch(addFavorite(id));\n    } else {\n      dispatch(deleteFavorite(id));\n    }\n  };\n\n  const countryItems = items.countries.map(({ _id, image, country, city }) => {\n    const isLiked = likedItems[_id] || false;\n    return (\n      <li key={_id} className={styles.countryItem}>\n        <div className={styles.countryImage}>\n          <img src={image} alt=\"\" />\n        </div>\n        <div className={styles.bottomInfo}>\n          <div className={styles.countryLocation}>\n            <svg className={styles.countryLocationIcon} width=\"24\" height=\"24\">\n              <use href={`${icon}#icon-location`} />\n            </svg>\n            <p className={styles.countryName}>\n              {country}, {city}\n            </p>\n          </div>\n          <form>\n            <label htmlFor={_id} className={styles.wrapLike}>\n              <input\n                id={_id}\n                type=\"checkbox\"\n                name=\"like\"\n                value=\"like\"\n                className={styles.likeInput}\n                checked={isLiked}\n                onChange={changeLike}\n              />\n              <svg\n                className={`${styles.likeIcon} ${isLiked ? styles.liked : ''}`}\n                width=\"32\"\n                height=\"32\"\n              >\n                <use href={`${icon}#icon-like`} />\n              </svg>\n            </label>\n          </form>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <section className={styles.popular}>\n      <div className=\"container\">\n        <h2 className={styles.mainTitle}>Find Popular Destination</h2>\n        <div className={styles.coutriesContainer}>\n          <ul className={styles.coutriesList}>{countryItems}</ul>\n        </div>\n        <h2 className={styles.mainTitle}>My Favorite Destinations</h2>\n        <div className={styles.coutriesContainer}>\n          {/* <ul className={styles.coutriesList}>{countryItems}</ul> */}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Popular;\n","// import styles from './countries-page.module.css';\n\nimport Popular from 'components/Private/Popular/Popular';\n\nconst CountriesPage = () => {\n  return (\n    <main className=\"countries\">\n      <Popular />\n    </main>\n  );\n};\n\nexport default CountriesPage;\n"],"names":["selectAllCountries","store","countries","_useSelector","useSelector","items","isLoading","error","favoriteItems","favoriteCountries","_useState","useState","_useState2","_slicedToArray","likedItems","setLikedItems","dispatch","useDispatch","useEffect","fetchCountries","storedLikedItems","JSON","parse","localStorage","getItem","id","console","log","includes","addFavorite","deleteFavorite","setItem","stringify","prevLikedItems","updatedLikedItems","_objectSpread","forEach","_jsx","className","styles","children","_jsxs","changeLike","_ref","target","checked","_defineProperty","countryItems","map","_ref2","_id","image","country","city","isLiked","src","alt","width","height","href","concat","icon","htmlFor","type","name","value","onChange","Popular"],"sourceRoot":""}